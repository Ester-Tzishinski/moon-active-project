{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\client\\\\src\\\\scroll.js\";\nimport React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nclass Scroll2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      promotions: [],\n      items: 20,\n      hasMoreItems: true,\n      length: 40,\n      index: 0\n    };\n  }\n\n  componentDidMount() {\n    const length = this.state.length;\n    const index = this.state.index;\n    console.log(\"index\", index);\n    fetch(`api/promotions/${index}`).then(response => {\n      // debugger;\n      return response.json();\n    }).then(data => this.setState({\n      promotions: data,\n      isLoading: false\n    }));\n    const {\n      promotions\n    } = this.state;\n    console.log(\"didMount\", promotions);\n  }\n\n  loadMore() {\n    // debugger;\n    if (document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n      this.setState({\n        hasMoreItems: false\n      });\n    } else {\n      if (this.state.index < 60) {\n        setTimeout(() => {\n          // this.setState({ length: this.state.length + 5 });\n          this.setState({\n            index: this.state.index + 10\n          });\n          this.componentDidMount();\n          const {\n            promotions\n          } = this.state;\n          console.log(\"loadMore\", promotions);\n        }, 2000);\n      }\n    }\n  }\n\n  showItems() {\n    const items = []; // this.getPromotions();\n\n    const {\n      promotions,\n      index\n    } = this.state;\n    console.log(\"promotionsInShowItems\", promotions); // for (var i = this.state.length - 40; i < this.state.length; i++) {\n    //     items.push(<li key={i}> Item {i} </li>);\n    //     console.log(i);\n    // }\n    // return items;\n    // for (let i = 0; i < index; i++) {\n    //     promotions.map(item => (\n    //         items.push(\n    //             <tr key={item._id}>{\n    //                 Object.values(item).map(value =>\n    //                     <td>{item._id != value ? value : ''}</td>\n    //                 )}<td>\n    //                     <ButtonGroup>\n    //                         <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/promotions/\" + item._id}>Edit</Button>\n    //                         {/* <Button size=\"sm\" color=\"\" tag={Link} to={\"/promotions/\" + item._id}>Duplicate  </Button> */}\n    //                         <Button size=\"sm\" color=\"\" onClick={() => this.duplicate(item._id)}>Duplicate</Button>\n    //                         <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(item._id)}>Delete</Button>\n    //                     </ButtonGroup>\n    //                     <br></br>\n    //                     <br></br>\n    //                 </td>\n    //             </tr>\n    //         )\n    //     ))\n    // // }\n    // return items;\n  }\n\n  render() {\n    const {\n      promotions\n    } = this.state;\n    console.log(\"promotionsScroll\", promotions);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '600px',\n        overflow: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      loadMore: this.loadMore.bind(this),\n      hasMore: this.state.hasMoreItems,\n      loader: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }, \" Loading... \"),\n      useWindow: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, this.showItems(), \" \"), \" \"), \" \");\n  }\n\n}\n\nexport default Scroll2;","map":{"version":3,"sources":["C:/project/client/src/scroll.js"],"names":["React","Component","InfiniteScroll","Button","ButtonGroup","Container","Table","Link","Scroll2","constructor","props","state","promotions","items","hasMoreItems","length","index","componentDidMount","console","log","fetch","then","response","json","data","setState","isLoading","loadMore","document","documentElement","scrollTop","offsetHeight","setTimeout","showItems","render","height","overflow","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nclass Scroll2 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { promotions: [], items: 20, hasMoreItems: true, length: 40, index: 0 };\r\n    }\r\n    componentDidMount() {\r\n        const length = this.state.length;\r\n        const index = this.state.index;\r\n        console.log(\"index\",index);\r\n        fetch(`api/promotions/${index}`)\r\n            .then(response => {\r\n                // debugger;\r\n                return response.json()\r\n            })\r\n            .then(data => this.setState({ promotions: data, isLoading: false }));\r\n        const { promotions } = this.state;\r\n        console.log(\"didMount\", promotions);\r\n    }\r\n    loadMore() {\r\n        // debugger;\r\n        if (document.documentElement.scrollTop === document.documentElement.offsetHeight) {\r\n            this.setState({ hasMoreItems: false });\r\n        } else {\r\n            if (this.state.index < 60) {\r\n                setTimeout(() => {\r\n                    // this.setState({ length: this.state.length + 5 });\r\n                    this.setState({ index: this.state.index + 10 });\r\n                    this.componentDidMount()\r\n                    const { promotions } = this.state;\r\n                    console.log(\"loadMore\", promotions);\r\n                }, 2000);\r\n            }\r\n        }\r\n    }\r\n    showItems() {\r\n        const items = [];\r\n        // this.getPromotions();\r\n        const { promotions ,index} = this.state;\r\n        console.log(\"promotionsInShowItems\", promotions);\r\n        // for (var i = this.state.length - 40; i < this.state.length; i++) {\r\n        //     items.push(<li key={i}> Item {i} </li>);\r\n        //     console.log(i);\r\n        // }\r\n        // return items;\r\n        // for (let i = 0; i < index; i++) {\r\n        //     promotions.map(item => (\r\n        //         items.push(\r\n        //             <tr key={item._id}>{\r\n        //                 Object.values(item).map(value =>\r\n        //                     <td>{item._id != value ? value : ''}</td>\r\n        //                 )}<td>\r\n        //                     <ButtonGroup>\r\n        //                         <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/promotions/\" + item._id}>Edit</Button>\r\n        //                         {/* <Button size=\"sm\" color=\"\" tag={Link} to={\"/promotions/\" + item._id}>Duplicate  </Button> */}\r\n        //                         <Button size=\"sm\" color=\"\" onClick={() => this.duplicate(item._id)}>Duplicate</Button>\r\n        //                         <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(item._id)}>Delete</Button>\r\n        //                     </ButtonGroup>\r\n        //                     <br></br>\r\n        //                     <br></br>\r\n\r\n\r\n        //                 </td>\r\n        //             </tr>\r\n\r\n        //         )\r\n        //     ))\r\n        // // }\r\n        // return items;\r\n    }\r\n    render() {\r\n        const { promotions } = this.state;\r\n        console.log(\"promotionsScroll\", promotions);\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <div style={{ height: '600px', overflow: 'auto' }}>\r\n                    <InfiniteScroll\r\n                        loadMore={this.loadMore.bind(this)}\r\n                        hasMore={this.state.hasMoreItems}\r\n                        loader={<div className=\"loader\"> Loading... </div>}\r\n                        useWindow={false}>\r\n                        {this.showItems()}{\" \"}\r\n                    </InfiniteScroll>{\" \"}\r\n                </div>{\" \"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Scroll2;"]},"metadata":{},"sourceType":"module"}