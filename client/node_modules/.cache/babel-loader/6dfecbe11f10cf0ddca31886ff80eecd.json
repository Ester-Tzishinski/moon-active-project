{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\client\\\\src\\\\InfiniteSpace.js\";\nimport React from 'react';\nimport request from 'superagent';\nimport debounce from 'lodash.debounce';\n\nclass InfiniteSpace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n      hasMore: true,\n      isLoading: false,\n      promotions: []\n    };\n    window.onscroll = debounce(() => {\n      const {\n        loadApods,\n        state: {\n          error,\n          isLoading,\n          hasMore\n        }\n      } = this;\n      if (error || isLoading || !hasMore) return;\n\n      if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n        loadApods();\n      }\n    }, 100);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    }); // request\n\n    fetch('api/promotions').then(response => response.json()).then(data => this.setState({\n      promotions: data\n    })) // .then((results) => {\n    //     const nextPromotion = results;\n    //     this.setState({\n    //         apods: [\n    //             ...this.state.apods,\n    //             nextPromotion\n    //         ]\n    //     });\n    // });\n    .catch(err => {\n      this.setState({\n        error: err.message,\n        isLoading: false\n      });\n    }); // this.loadApods();\n  } // loadApods = () => {\n  // }\n\n\n  render() {\n    const {\n      promotions,\n      error,\n      hasMore,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Infinite Space!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Scroll down to load more!!\"), promotions.map(apod => /*#__PURE__*/React.createElement(React.Fragment, {\n      key: apod._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, apod)))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), error && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#900'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, error), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Loading...\"), !hasMore && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Loading Complete\"));\n  }\n\n}\n\nexport default InfiniteSpace;","map":{"version":3,"sources":["C:/project/client/src/InfiniteSpace.js"],"names":["React","request","debounce","InfiniteSpace","Component","constructor","props","state","error","hasMore","isLoading","promotions","window","onscroll","loadApods","innerHeight","document","documentElement","scrollTop","offsetHeight","componentDidMount","setState","fetch","then","response","json","data","catch","err","message","render","map","apod","_id","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport request from 'superagent';\r\nimport debounce from 'lodash.debounce';\r\n\r\nclass InfiniteSpace extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: false,\r\n            hasMore: true,\r\n            isLoading: false,\r\n            promotions: [],\r\n        };\r\n\r\n        window.onscroll = debounce(() => {\r\n            const {\r\n                loadApods,\r\n                state: {\r\n                    error,\r\n                    isLoading,\r\n                    hasMore\r\n                }\r\n            } = this;\r\n            if (error || isLoading || !hasMore) return;\r\n\r\n            if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\r\n                loadApods();\r\n            }\r\n        }, 100);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        // request\r\n        fetch('api/promotions')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ promotions: data }))\r\n            // .then((results) => {\r\n            //     const nextPromotion = results;\r\n\r\n            //     this.setState({\r\n            //         apods: [\r\n            //             ...this.state.apods,\r\n            //             nextPromotion\r\n            //         ]\r\n            //     });\r\n            // });\r\n            .catch((err) => {\r\n                this.setState({\r\n                    error: err.message,\r\n                    isLoading: false\r\n                });\r\n            });\r\n        // this.loadApods();\r\n    }\r\n    // loadApods = () => {\r\n       \r\n    // }\r\n\r\n\r\n    render() {\r\n        const { promotions, error, hasMore, isLoading, } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>Infinite Space!</h1>\r\n                <p>Scroll down to load more!!</p>\r\n                {\r\n                    promotions.map(apod => (\r\n                        <React.Fragment key={apod._id}>\r\n                            <hr />\r\n                            <div>\r\n                                {/* <div>{apod.explanation}</div> */}\r\n                                <div>{apod}</div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    ))}\r\n                < hr />\r\n                {error &&\r\n                    <div style={{ color: '#900' }}>\r\n                        {error}\r\n                    </div>\r\n                }\r\n\r\n                {isLoading &&\r\n                    <div>Loading...</div>\r\n                }\r\n\r\n                {!hasMore &&\r\n                    <div>Loading Complete</div>\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default InfiniteSpace;"]},"metadata":{},"sourceType":"module"}