{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\client\\\\src\\\\PromotionEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\n\nclass PromotionEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyPromotion = {\n      promotionName: '',\n      type: '',\n      startDate: '',\n      endDate: '',\n      userGroupName: ''\n    };\n    this.state = {\n      promotionCoulmn: [],\n      item: this.emptyPromotion\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      console.log(\"this.props.match.params.id\", this.props.match.params.id);\n      const promotion = await (await fetch(`/api/promotion/${this.props.match.params.id}`)).json();\n      this.setState({\n        item: promotion\n      });\n    }\n\n    fetch('../api/schema').then(response => response.json()).then(schema => this.setState({\n      promotionCoulmn: schema\n    }));\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = { ...this.state.item\n    };\n    item[name] = value;\n    this.setState({\n      item\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      item\n    } = this.state;\n    await fetch('/api/promotion', {\n      method: item._id ? 'PUT' : 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    this.props.history.push('/promotions');\n  }\n\n  render() {\n    const {\n      promotionCoulmn,\n      item\n    } = this.state;\n    const title = /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, item.id ? 'Edit Promotion' : 'Add Promotion');\n    console.log(\"promotionCoulmn edit\", promotionCoulmn);\n    promotionCoulmn.map(fields => {\n      console.log(Object.keys(fields));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(AppNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, title, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"promotionName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"prmotion name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"promotionName\",\n      id: \"promotionName\",\n      value: item.promotionName || '',\n      onChange: this.handleChange,\n      autoComplete: \"promotionName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"type\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"type\",\n      id: \"type\",\n      value: item.type || '',\n      onChange: this.handleChange,\n      autoComplete: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"startDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"start date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"startDate\",\n      id: \"startDate\",\n      value: item.startDate || '',\n      onChange: this.handleChange,\n      autoComplete: \"startDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"endDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"end date\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"date\",\n      name: \"endDate\",\n      id: \"endDate\",\n      value: item.endDate || '',\n      onChange: this.handleChange,\n      autoComplete: \"endDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"userGroupName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"use group name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"userGroupName\",\n      id: \"userGroupName\",\n      value: item.userGroupName || '',\n      onChange: this.handleChange,\n      autoComplete: \"userGroupName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Save\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      tag: Link,\n      to: \"/promotions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default withRouter(PromotionEdit);","map":{"version":3,"sources":["C:/project/client/src/PromotionEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","AppNavbar","PromotionEdit","constructor","props","emptyPromotion","promotionName","type","startDate","endDate","userGroupName","state","promotionCoulmn","item","handleChange","bind","handleSubmit","componentDidMount","match","params","id","console","log","promotion","fetch","json","setState","then","response","schema","event","target","value","name","preventDefault","method","_id","headers","body","JSON","stringify","history","push","render","title","map","fields","Object","keys"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\n\r\nclass PromotionEdit extends Component {\r\n\r\n  emptyPromotion = {\r\n    promotionName: '',\r\n    type: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    userGroupName: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { promotionCoulmn: [], item: this.emptyPromotion };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.match.params.id !== 'new') {\r\n      console.log(\"this.props.match.params.id\", this.props.match.params.id);\r\n      const promotion = await (await fetch(`/api/promotion/${this.props.match.params.id}`)).json()\r\n      this.setState({ item: promotion });\r\n    }\r\n    fetch('../api/schema')\r\n      .then(response => response.json())\r\n      .then(schema => this.setState({ promotionCoulmn: schema }));\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    let item = { ...this.state.item };\r\n    item[name] = value;\r\n    this.setState({ item });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { item } = this.state;\r\n\r\n    await fetch('/api/promotion', {\r\n      method: (item._id) ? 'PUT' : 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push('/promotions');\r\n  }\r\n\r\n  render() {\r\n    const { promotionCoulmn, item } = this.state;\r\n    const title = <h2>{item.id ? 'Edit Promotion' : 'Add Promotion'}</h2>;\r\n    console.log(\"promotionCoulmn edit\", promotionCoulmn);\r\n    promotionCoulmn.map(fields=>{\r\n      console.log(Object.keys(fields));\r\n    })\r\n    return <div>\r\n      <AppNavbar />\r\n      <Container>\r\n        {title}\r\n        <Form onSubmit={this.handleSubmit}>\r\n          {/* <FormGroup>\r\n            <Label for=\"promotionName\">prmotion name</Label>\r\n            <Input type=\"text\" name=\"promotionName\" id=\"promotionName\" value={item.promotionName || ''}\r\n                   onChange={this.handleChange} autoComplete=\"promotionName\"/>\r\n          </FormGroup> */}\r\n\r\n          <FormGroup>\r\n            <Label for=\"promotionName\">prmotion name</Label>\r\n            <Input type=\"text\" name=\"promotionName\" id=\"promotionName\" value={item.promotionName || ''}\r\n              onChange={this.handleChange} autoComplete=\"promotionName\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"type\">type</Label>\r\n            <Input type=\"text\" name=\"type\" id=\"type\" value={item.type || ''}\r\n              onChange={this.handleChange} autoComplete=\"type\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"startDate\">start date</Label>\r\n            <Input type=\"date\" name=\"startDate\" id=\"startDate\" value={item.startDate || ''}\r\n              onChange={this.handleChange} autoComplete=\"startDate\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"endDate\">end date</Label>\r\n            <Input type=\"date\" name=\"endDate\" id=\"endDate\" value={item.endDate || ''}\r\n              onChange={this.handleChange} autoComplete=\"endDate\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"userGroupName\">use group name</Label>\r\n            <Input type=\"text\" name=\"userGroupName\" id=\"userGroupName\" value={item.userGroupName || ''}\r\n              onChange={this.handleChange} autoComplete=\"userGroupName\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n            <Button color=\"secondary\" tag={Link} to=\"/promotions\">Cancel</Button>\r\n          </FormGroup>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default withRouter(PromotionEdit);"]},"metadata":{},"sourceType":"module"}