{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\client\\\\src\\\\PromotionList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\n\nclass PromotionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      promotions: [],\n      isLoading: true\n    };\n    this.remove = this.remove.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    }); //////////\n\n    fetch('api/promotions').then(response => response.json()).then(data => this.setState({\n      promotions: data,\n      isLoading: false\n    }));\n  }\n\n  async duplicate(id) {}\n\n  async remove(id) {\n    await fetch(`/api/promotion/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      console.log(\"Remove Done!\");\n      let updatedPromotions = [...this.state.promotions].filter(i => i._id !== id);\n      this.setState({\n        promotions: updatedPromotions\n      });\n    });\n  }\n\n  render() {\n    const {\n      promotions,\n      isLoading\n    } = this.state; // console.log(\"promotions\",promotions);\n    // promotions.forEach(item=> \n    //   console.log(Object.keys(item))\n    //   )\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    const promotionList = promotions.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"item._id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, Object.values(item).map(value => /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, item._id != value ? value : '')), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      color: \"primary\",\n      tag: Link,\n      to: \"/promotions/\" + item._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      color: \"\",\n      onClick: () => this.duplicate(item._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Duplicate\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      color: \"danger\",\n      onClick: () => this.remove(item._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Delete\")))));\n    const promotionColumns = [];\n    const k = [];\n    promotions.map(item => (k.push(Object.keys(item)), console.log(\"items\", k)));\n    k.map(item => item.map(a => {\n      if (!promotionColumns.some(val => val === a)) {\n        promotionColumns.push(a);\n\n        /*#__PURE__*/\n        React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }, promotionColumns.map(value => /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        }, a._id != value ? value : '')));\n      }\n\n      console.log(\"em\", a);\n    }));\n    promotionColumns.map(coulmn => /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, coulmn));\n    console.log(\"p\", promotionColumns); // const promotionList = promotions.map(promotion => {\n    //   return <tr key={promotion._id}>\n    //     <td>{promotion.promotionName}</td>\n    //     <td>{promotion.type}</td>\n    //     <td>{promotion.startDate}</td>\n    //     <td>{promotion.endDate}</td>\n    //     <td>{promotion.userGroupName}</td>\n    //     <td><a href={promotion.copyright}>{promotion.copyright}</a></td>\n    //     <td>\n    // <ButtonGroup>\n    //   <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/promotions/\" + promotion._id}>Edit</Button>\n    //   {/* <Button size=\"sm\" color=\"\" tag={Link} to={\"/promotions/\" + promotion._id}>Duplicate  </Button> */}\n    //   <Button size=\"sm\" color=\"\" onClick={() => this.duplicate(promotion._id)}>Duplicate</Button>\n    //   <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(promotion._id)}>Delete</Button>\n    // </ButtonGroup>\n    // </td>\n    // </tr>\n    // });\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      tag: Link,\n      to: \"/promotions/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Add Promotion\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"Promotion List\"), /*#__PURE__*/React.createElement(Table, {\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, promotionColumns), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, promotionList))));\n  }\n\n}\n\nexport default PromotionList;","map":{"version":3,"sources":["C:/project/client/src/PromotionList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","PromotionList","constructor","props","state","promotions","isLoading","remove","bind","componentDidMount","setState","fetch","then","response","json","data","duplicate","id","method","headers","console","log","updatedPromotions","filter","i","_id","render","promotionList","map","item","Object","values","value","promotionColumns","k","push","keys","a","some","val","coulmn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PromotionList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { promotions: [], isLoading: true };\r\n    this.remove = this.remove.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    //////////\r\n\r\n    fetch('api/promotions')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ promotions: data, isLoading: false }));\r\n  }\r\n  async duplicate(id) {\r\n\r\n  }\r\n  async remove(id) {\r\n    await fetch(`/api/promotion/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(() => {\r\n      console.log(\"Remove Done!\");\r\n      let updatedPromotions = [...this.state.promotions].filter(i => i._id !== id);\r\n      this.setState({ promotions: updatedPromotions });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { promotions, isLoading } = this.state;\r\n    // console.log(\"promotions\",promotions);\r\n    // promotions.forEach(item=> \r\n    //   console.log(Object.keys(item))\r\n    //   )\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    const promotionList = promotions.map(item => (\r\n      <tr key=\"item._id\">{\r\n        Object.values(item).map(value =>\r\n          <td>{item._id != value ? value : ''}</td>\r\n        )}<td>\r\n          <ButtonGroup>\r\n            <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/promotions/\" + item._id}>Edit</Button>\r\n            {/* <Button size=\"sm\" color=\"\" tag={Link} to={\"/promotions/\" + item._id}>Duplicate  </Button> */}\r\n            <Button size=\"sm\" color=\"\" onClick={() => this.duplicate(item._id)}>Duplicate</Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(item._id)}>Delete</Button>\r\n          </ButtonGroup>\r\n        </td></tr>\r\n    ))\r\n    const promotionColumns = [];\r\n    const k = [];\r\n    promotions.map(item => (\r\n      k.push(Object.keys(item)),\r\n      console.log(\"items\", k)\r\n    )\r\n    )\r\n    k.map((item) => (\r\n      item.map(a => {\r\n        if (!promotionColumns.some(val => val === a)) {\r\n          promotionColumns.push(a);\r\n          <tr>{\r\n            promotionColumns.map(value =>\r\n              <td>{a._id != value ? value : ''}</td>\r\n            )}</tr>\r\n        }\r\n        console.log(\"em\", a);\r\n      }\r\n      )\r\n      )\r\n      )\r\n      promotionColumns.map(coulmn =>\r\n      <th>{coulmn}</th>\r\n    )\r\n    console.log(\"p\", promotionColumns);\r\n    // const promotionList = promotions.map(promotion => {\r\n    //   return <tr key={promotion._id}>\r\n    //     <td>{promotion.promotionName}</td>\r\n    //     <td>{promotion.type}</td>\r\n    //     <td>{promotion.startDate}</td>\r\n    //     <td>{promotion.endDate}</td>\r\n    //     <td>{promotion.userGroupName}</td>\r\n    //     <td><a href={promotion.copyright}>{promotion.copyright}</a></td>\r\n    //     <td>\r\n    // <ButtonGroup>\r\n    //   <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/promotions/\" + promotion._id}>Edit</Button>\r\n    //   {/* <Button size=\"sm\" color=\"\" tag={Link} to={\"/promotions/\" + promotion._id}>Duplicate  </Button> */}\r\n    //   <Button size=\"sm\" color=\"\" onClick={() => this.duplicate(promotion._id)}>Duplicate</Button>\r\n    //   <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(promotion._id)}>Delete</Button>\r\n    // </ButtonGroup>\r\n    // </td>\r\n    // </tr>\r\n    // });\r\n\r\n    return (\r\n      <div>\r\n        <AppNavbar />\r\n        <Container fluid>\r\n          <div className=\"float-right\">\r\n            <Button color=\"success\" tag={Link} to=\"/promotions/new\">Add Promotion</Button>\r\n          </div>\r\n          <h3>Promotion List</h3>\r\n          <Table className=\"mt-4\">\r\n            <thead>\r\n              {promotionColumns}\r\n              {/* <tr>\r\n                <th width=\"20%\">Promotion Name</th>\r\n                <th width=\"20%\">Type</th>\r\n                <th width=\"10%\">Start Date</th>\r\n                <th>End Date</th>\r\n                <th>userGroupName</th>\r\n              </tr> */}\r\n            </thead>\r\n            <tbody>\r\n              {promotionList}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PromotionList;"]},"metadata":{},"sourceType":"module"}